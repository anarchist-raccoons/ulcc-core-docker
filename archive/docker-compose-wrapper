#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

declare -A allowed_env=( 
 [prod]=1  [uat]=1  [dev]=1 [train]=1 [demo]=1
)

function valid_ip {

  local  ip=$1

  if expr "$ip" : '[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$' >/dev/null; then
    IFS=.
    set $ip
    for quad in 1 2 3 4; do
      if eval [ \$$quad -gt 255 ]; then
        return 0
      fi
    done
    return 1
  else
    return 0
  fi
}
APP_KEY=$1
ENVIRONMENT=$2

[ -z "$ENVIRONMENT" ] && echo "No docker-compose command?" && exit

if [ ! -n "${allowed_env[$ENVIRONMENT]}" ]; then
        ENVIRONMENT="dev"
        shift
else
        shift; shift
fi

#[ -z "$@" ] && echo "No docker-compose command?" && exit;

[ ! -f ../../builds/$APP_KEY-$ENVIRONMENT/.env ] && echo "no .env file found at ../../builds/$APP_KEY-$ENVIRONMENT/" && exit

if ls ../../builds/$APP_KEY-$ENVIRONMENT/migrate_* 1> /dev/null 2>&1; then
#    echo "files do exist"
    cp -u ../../builds/$APP_KEY-$ENVIRONMENT/migrate_* docker/
else
    touch docker/migrate_dummy
fi

echo "Reading from ../../builds/$APP_KEY-$ENVIRONMENT/.env"
echo $(egrep -v '^#' ../../builds/$APP_KEY-$ENVIRONMENT/.env | xargs -d '\n')
export $(egrep -v '^#' ../../builds/$APP_KEY-$ENVIRONMENT/.env | xargs -d '\n')

# Temporarily put a copy of the .env file somewhere that terraform can reference it without relative rigmarole
cp ../../builds/$APP_KEY-$ENVIRONMENT/.env ./

# Do we have an IP or localhost (will need self-signed certs) or a domain (can use certbot)
# Or do we wish to force our own domains (dev, uat, etc)

valid_ip $EXTERNAL_HOSTNAME
HOSTNAME_IS_IP=$?
echo $EXTERNAL_HOSTNAME
echo $HOSTNAME_IS_IP
USE_SS_CERT=0
if [ "$HOSTNAME_IS_IP" == 1 ]; then
   echo "here1"
   USE_SS_CERT=1
fi
# If EXTERNAL_HOSTNAME is localhost we assume a dev environment to run lots of containers we'll prepend the APP_KEY as sub-domains
# Also set HOSTNAME_IS_IP to 1 so that self-signed certs are generated
if [ "$EXTERNAL_HOSTNAME"  == "localhost" ]; then
   echo "here2"
   USE_SS_CERT=1
   EXTERNAL_HOSTNAME="$APP_KEY.localhost"
 fi

## Export the flag (may need copied to .env for proper builds)
#export HOSTNAME_IS_IP=$HOSTNAME_IS_IP
#sed -i "s/^HOSTNAME_IS_IP=$/HOSTNAME_IS_IP=$HOSTNAME_IS_IP/" ./.env

# Export the flag (may need copied to .env for proper builds)
export USE_SS_CERT=$USE_SS_CERT
sed -i "s/^USE_SS_CERT=.*$/USE_SS_CERT=$USE_SS_CERT/" ./.env

if [ -z "$EXTERNAL_HOSTNAME" ]; then
  export EXTERNAL_HOSTNAME=$APP_KEY-$ENVIRONMENT.$APP.cdl.cosector.com
fi

sed -i "s/^EXTERNAL_HOSTNAME=.*$/EXTERNAL_HOSTNAME=$EXTERNAL_HOSTNAME/" ./.env

echo "hostname: $EXTERNAL_HOSTNAME (ip? $HOSTNAME_IS_IP, ss_cert? $USE_SS_CERT)"
if [ $# == 1 ] && [ $@ == "env" ]; then
    echo "Just generating .env file for now"
else
   echo "Running docker-compose $@"
   exec docker-compose $@
fi
